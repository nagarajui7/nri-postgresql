integrations:
- name: nri-postgresql
  env:
    # The username for the postgres instance. Required.
    username: postgres
    # The password for the postgres instance. Required.
    password: pass

    # The hostname for the postgres instance. Defaults to localhost.
    hostname: psql-sample.localnet

    # The database to connect to on the postgres instance. Defaults to postgres.
    # database: postgres

    # The port of the postgres instance. If PgBouncer is being used,
    # use the port it is running on. Defaults to 5432
    port: "6432"
 

    # Collection List can be either a JSON array, a JSON object, or the string literal 'ALL'.
    #
    # If it is a JSON array, it will be interpreted as a list of database names to
    # collect all related metrics from. This will collect metrics for each database
    # specified, as well as all tables and indexes that belong to that database.
    # Example:
    # collection_list: '["postgres"]'
    # If it is the string literal 'ALL', it will collect metrics for all databases, schemas, tables, and indexes
    # Example:
    # collection_list: 'ALL'
    collection_list: '["postgres"]'

    # True if database lock metrics should be collected
    # Note: requires that the `tablefunc` extension be installed on the public schema
    # of the database where lock metrics will be collected.
    collect_db_lock_metrics: "false"
    
    # True if SSL is to be used. Defaults to false.
    enable_ssl: "true"
    # True if the SSL certificate should be trusted without validating.
    # Setting this to true may open up the monitoring service to MITM attacks.
    # Defaults to false.
    trust_server_certificate: "false"


    ssl_cert_location: /etc/newrelic-infra/postgresql.crt
    ssl_key_location: /etc/newrelic-infra/postgresql.key
    ssl_root_cert_location: /etc/newrelic-infra/root_cert.crt
    timeout: "10"

    # custom_metrics_query: >-
    #   select
    #     'rows_inserted' as "metric_name",
    #     'delta' as "metric_type",
    #     sd.tup_inserted as "metric_value",
    #     sd.datid as "database_id"
    #   from pg_stat_database sd;
    
  interval: 15s
  labels:
    env: production
    role: postgresql
  inventory_source: config/postgresql
